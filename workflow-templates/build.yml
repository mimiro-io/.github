name: Build

on:
  push:
    branches:
    - [ $default-branch ]
  pull_request:
    - [ $default-branch ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      aws_region: eu-west-1

    steps:
    - name: Checkout aws-tooling
      uses: actions/checkout@v2
      with:
        repository: mimiro-io/aws-tooling
        token: ${{ secrets.MIMIRO_BUILD_GITHUB_TOKEN }}
        ref: master
        path: aws-tooling

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.MIMIRO_OPS_AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.MIMIRO_OPS_AWS_ACCESS_KEY_SECRET }}
        aws-region: ${{ env.aws_region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Ensure existing ECR repo
      id: ensure-ecr-repo
      env:
        ECR_REPOSITORY: ${{ github.event.repository.name }}
      run: |
        PATH=aws-tooling/bin:$PATH mm-aws-tooling ecr-ensure-repo -r $ECR_REPOSITORY

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build docker image
      uses: docker/build-push-action@v2
      id: build-image
      with:
        push: false
        load: true
        tags: |
          ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:${{ github.sha }}
          ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:${{ github.sha }}
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Push docker image to ECR
      uses: docker/build-push-action@v2
      id: push-image
      with:
        push: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
        tags: |
          ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:${{ github.sha }}
          ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

